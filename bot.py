import os
import asyncio
from aiogram import Bot, Dispatcher, executor, types
from aiohttp import web

BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# --- –ë–æ—Ç –∫–æ–º–∞–Ω–¥—ã ---
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ üí∞")

@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# --- Web server –¥–ª—è Render ---
async def handle(request):
    return web.Response(text="–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

async def start_web_app():
    app = web.Application()
    app.router.add_get("/", handle)
    port = int(os.environ.get("PORT", 10000))  # Render –≤—ã–¥–∞—ë—Ç PORT
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

# --- –ó–∞–ø—É—Å–∫ –∏ –±–æ—Ç–∞, –∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ ---
async def main():
    await start_web_app()
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
